"""
This type stub file was generated by pyright.
"""

"""
    Kaggle API

    API for kaggle.com  # noqa: E501

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
class StartBlobUploadRequest:
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    swagger_types = ...
    attribute_map = ...
    def __init__(self, type=..., name=..., content_length=..., content_type=..., last_modified_epoch_seconds=...) -> None:
        """StartBlobUploadRequest - a model defined in Swagger"""
        ...
    
    @property
    def type(self): # -> None:
        """Gets the type of this StartBlobUploadRequest.  # noqa: E501

        The type of the blob (one of \"dataset\", \"model\", \"inbox\")  # noqa: E501

        :return: The type of this StartBlobUploadRequest.  # noqa: E501
        :rtype: object
        """
        ...
    
    @type.setter
    def type(self, type): # -> None:
        """Sets the type of this StartBlobUploadRequest.

        The type of the blob (one of \"dataset\", \"model\", \"inbox\")  # noqa: E501

        :param type: The type of this StartBlobUploadRequest.  # noqa: E501
        :type: object
        """
        ...
    
    @property
    def name(self): # -> None:
        """Gets the name of this StartBlobUploadRequest.  # noqa: E501

        Name of the file  # noqa: E501

        :return: The name of this StartBlobUploadRequest.  # noqa: E501
        :rtype: str
        """
        ...
    
    @name.setter
    def name(self, name): # -> None:
        """Sets the name of this StartBlobUploadRequest.

        Name of the file  # noqa: E501

        :param name: The name of this StartBlobUploadRequest.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def content_length(self): # -> None:
        """Gets the content_length of this StartBlobUploadRequest.  # noqa: E501

        Content length of the file in bytes  # noqa: E501

        :return: The content_length of this StartBlobUploadRequest.  # noqa: E501
        :rtype: int
        """
        ...
    
    @content_length.setter
    def content_length(self, content_length): # -> None:
        """Sets the content_length of this StartBlobUploadRequest.

        Content length of the file in bytes  # noqa: E501

        :param content_length: The content_length of this StartBlobUploadRequest.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def content_type(self): # -> None:
        """Gets the content_type of this StartBlobUploadRequest.  # noqa: E501

        Content/MIME type (e.g. \"text/plain\") of the file  # noqa: E501

        :return: The content_type of this StartBlobUploadRequest.  # noqa: E501
        :rtype: str
        """
        ...
    
    @content_type.setter
    def content_type(self, content_type): # -> None:
        """Sets the content_type of this StartBlobUploadRequest.

        Content/MIME type (e.g. \"text/plain\") of the file  # noqa: E501

        :param content_type: The content_type of this StartBlobUploadRequest.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def last_modified_epoch_seconds(self): # -> None:
        """Gets the last_modified_epoch_seconds of this StartBlobUploadRequest.  # noqa: E501

        Last modified date of file in seconds since epoch in UTC  # noqa: E501

        :return: The last_modified_epoch_seconds of this StartBlobUploadRequest.  # noqa: E501
        :rtype: int
        """
        ...
    
    @last_modified_epoch_seconds.setter
    def last_modified_epoch_seconds(self, last_modified_epoch_seconds): # -> None:
        """Sets the last_modified_epoch_seconds of this StartBlobUploadRequest.

        Last modified date of file in seconds since epoch in UTC  # noqa: E501

        :param last_modified_epoch_seconds: The last_modified_epoch_seconds of this StartBlobUploadRequest.  # noqa: E501
        :type: int
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


